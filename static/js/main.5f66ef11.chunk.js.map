{"version":3,"sources":["contexts/SettingsProvider.js","contexts/AppProvider.js","components/setting-panels/ChartSettings.js","Utils.js","components/setting-panels/ManagerSettings.js","components/setting-panels/EmployeeSettings.js","components/Settings.js","components/Chart.js","index.js","components/Main.js"],"names":["PanelContext","React","createContext","SettingsProvider","props","expanded","useState","Provider","value","children","AppContext","AppProvider","gofetch","limit","offset","managerId","employeeId","searching","error","data","url","fetchFailed","searchType","dataReady","shouldFetch","errorMessage","noMatch","state","setState","baseUrl","URL","useStyles","makeStyles","theme","root","width","position","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","textField","marginLeft","spacing","marginRight","overflow","button","margin","display","backgroundColor","input","ChartSettings","classes","useContext","updatePanelState","values","setValues","previousValues","setPreviousValues","disabled","setDisabled","buttonTitle","handleValueChange","name","event","target","replace","newvalue","Math","abs","useEffect","isEqual","panel","ExpansionPanel","onChange","ExpansionPanelSummary","expandIcon","aria-controls","id","Typography","className","ExpansionPanelDetails","container","autoComplete","TextField","type","label","parseInt","variant","Button","onClick","params","Object","assign","keys","forEach","key","searchParams","append","goFetch","avatars","setUserTitle","employee","department","office","manager","createDataTree","dataset","length","hashTable","lowestManager","aData","person","toString","first","last","title","avatar","floor","random","totalReports","dataTree","hasOwnProperty","push","appendReports","child","ManagerSettings","noValidate","e","EmployeeSettings","min","boxShadow","modal","height","zIndex","borderRadius","justifyContent","alignItems","flexDirection","textAlign","closeIcon","bottom","right","hidden","motion","animation","Settings","visible","setVisible","errorVisible","setErrorVisible","noMatchVisible","setnoMatchVisible","console","log","Fade","in","gutterBottom","OrgChart","require","Chart","a","fetch","json","then","employeeList","fetchData","borderColor","reportsColor","titleColor","tree","shouldResize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f66ef11.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const PanelContext = React.createContext();\r\n\r\nexport default function SettingsProvider(props) {\r\n\tconst expanded = useState(false);\r\n\treturn (\r\n\t\t<PanelContext.Provider value={expanded}>\r\n\t\t\t{props.children}\r\n\t\t</PanelContext.Provider>\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport const AppContext = React.createContext({});\r\n\r\nexport default function AppProvider({ children }) {\r\n\tconst [state, setState] = useState({\r\n\t\tgofetch: false,\r\n\t\tlimit: 5,\r\n\t\toffset: 0,\r\n\t\tmanagerId: 0,\r\n\t\temployeeId: 1,\r\n\t\tsearching: false,\r\n\t\terror: false,\r\n\t\tdata: [],\r\n\t\turl: \"\",\r\n\t\tfetchFailed: false,\r\n\t\tsearchType: \"\",\r\n\t\tdataReady: false,\r\n\t\tshouldFetch: true,\r\n\t\terrorMessage: \"\",\r\n\t\tnoMatch: false\r\n\t});\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider value={{ state, setState }}>\r\n\t\t\t{children}\r\n\t\t</AppContext.Provider>\r\n\t);\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { PanelContext } from \"../../contexts/SettingsProvider\";\r\nimport { AppContext } from \"../../contexts/AppProvider\";\r\n// import { baseUrl } from \"../../Utils\";\r\n\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { isEqual } from \"lodash\";\r\n\r\nconst baseUrl = new URL(\r\n\t\"https://2jdg5klzl0.execute-api.us-west-1.amazonaws.com/default/EmployeesChart-Api\"\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: \"30%\",\r\n\t\tposition: \"absolute\"\r\n\t},\r\n\theading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tflexBasis: \"33.33%\",\r\n\t\tflexShrink: 0\r\n\t},\r\n\tsecondaryHeading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tcolor: theme.palette.text.secondary\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 200,\r\n\t\toverflow: \"visible\"\r\n\t},\r\n\tbutton: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tdisplay: \"block\",\r\n\t\tbackgroundColor: \"#022be8\",\r\n\t\tcolor: \"white\"\r\n\t},\r\n\tinput: {\r\n\t\tdisplay: \"none\"\r\n\t}\r\n}));\r\n\r\nexport default function ChartSettings() {\r\n\tconst classes = useStyles();\r\n\tconst [expanded, updatePanelState] = useContext(PanelContext);\r\n\tconst { state, setState } = useContext(AppContext);\r\n\tconst [values, setValues] = useState({\r\n\t\tlimit: state.limit,\r\n\t\toffset: state.offset\r\n\t});\r\n\tconst [previousValues, setPreviousValues] = useState({\r\n\t\tlimit: null,\r\n\t\toffset: null\r\n\t});\r\n\tconst [disabled, setDisabled] = useState(false);\r\n\tconst [buttonTitle] = useState(\"Generate Chart\");\r\n\r\n\tconst handleChange = panel => (event, expanded) => {\r\n\t\tupdatePanelState(expanded ? panel : false);\r\n\t};\r\n\r\n\tconst handleValueChange = name => event => {\r\n\t\tconst value = event.target.value.replace(/^0+/, \"\");\r\n\t\tconst newvalue = Math.abs(value);\r\n\t\tsetValues({ ...values, [name]: newvalue });\r\n\t};\r\n\r\n\t// effect to avoid re submitting request if values are the same\r\n\tuseEffect(() => {\r\n\t\tif (!isEqual(values, previousValues)) {\r\n\t\t\tsetDisabled(false);\r\n\t\t} else {\r\n\t\t\tsetDisabled(true);\r\n\t\t}\r\n\t}, [values, previousValues]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (expanded !== \"panel1\") {\r\n\t\t\tsetDisabled(false);\r\n\t\t\tsetPreviousValues({ limit: null, offset: null });\r\n\t\t}\r\n\t}, [expanded]);\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetDisabled(true);\r\n\t\tconst { limit, offset } = values;\r\n\t\tsetPreviousValues({ limit, offset });\r\n\r\n\t\tconst params = Object.assign({ limit, offset });\r\n\t\tObject.keys(params).forEach(key =>\r\n\t\t\tbaseUrl.searchParams.append(key, params[key])\r\n\t\t);\r\n\t\tsetState({ url: baseUrl, goFetch: true });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ExpansionPanel\r\n\t\t\texpanded={expanded === \"panel1\"}\r\n\t\t\tonChange={handleChange(\"panel1\")}\r\n\t\t>\r\n\t\t\t<ExpansionPanelSummary\r\n\t\t\t\texpandIcon={<ExpandMoreIcon />}\r\n\t\t\t\taria-controls=\"panel1bh-content\"\r\n\t\t\t\tid=\"panel1bh-header\"\r\n\t\t\t>\r\n\t\t\t\t<Typography className={classes.heading}>\r\n\t\t\t\t\tOrganizational Chart\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography className={classes.secondaryHeading}>\r\n\t\t\t\t\tGenerate the full tree, or a subset\r\n\t\t\t\t</Typography>\r\n\t\t\t</ExpansionPanelSummary>\r\n\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t<form className={classes.container} autoComplete=\"off\">\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tid=\"standard-name\"\r\n\t\t\t\t\t\tlabel=\"Limit of employees\"\r\n\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\tvalue={parseInt(values.limit)}\r\n\t\t\t\t\t\tonChange={handleValueChange(\"limit\")}\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tid=\"standard-name\"\r\n\t\t\t\t\t\tlabel=\"Set an Offset\"\r\n\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\tvalue={parseInt(values.offset)}\r\n\t\t\t\t\t\tonChange={handleValueChange(\"offset\")}\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{buttonTitle}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t</ExpansionPanelDetails>\r\n\t\t</ExpansionPanel>\r\n\t);\r\n}\r\n","const avatars = [\r\n\t\"https://www.w3schools.com/howto/img_avatar.png\",\r\n\t\"https://www.w3schools.com/howto/img_avatar2.png\",\r\n\t\"https://www.w3schools.com/w3images/avatar2.png\",\r\n\t\"https://www.w3schools.com/w3images/avatar6.png\",\r\n\t\"https://www.w3schools.com/w3images/avatar5.png\"\r\n];\r\n\r\nconst randomAvatar = () => Math.floor(Math.random() * (4 - 0)) + 0;\r\n\r\nconst setUserTitle = employee => {\r\n\tconst dept = employee.department ? `Dept. ${employee.department}` : \"\";\r\n\tconst office = employee.office ? `Office ${employee.office}` : \"\";\r\n\tconst manager = employee.manager ? `Manager: ${employee.manager}` : \"\";\r\n\tconst title = dept + \" \" + office + \" \" + manager;\r\n\treturn title;\r\n};\r\n\r\nconst setEmployeeObjectForLibrary = employee => {\r\n\treturn {\r\n\t\tid: employee.id,\r\n\t\tmanager: employee.manager,\r\n\t\tperson: {\r\n\t\t\tdepartment: employee.id.toString(),\r\n\t\t\tname: employee.first + \" \" + employee.last,\r\n\t\t\ttitle: setUserTitle(employee),\r\n\t\t\tavatar: avatars[randomAvatar()],\r\n\t\t\ttotalReports: \"\"\r\n\t\t},\r\n\t\tchildren: []\r\n\t};\r\n};\r\n\r\nconst appendReports = employee => {\r\n\tif (employee.children.length > 0) {\r\n\t\temployee.person.totalReports = `${employee.children.length}`;\r\n\t\temployee.children.forEach(child => {\r\n\t\t\tappendReports(child);\r\n\t\t});\r\n\t}\r\n\treturn employee;\r\n};\r\n\r\nexport const userHasId = (employeeList, id) => {\r\n\temployeeList.forEach(employee => {\r\n\t\tif (employee.manager === id) return;\r\n\t});\r\n\treturn false;\r\n};\r\n\r\nexport const createDataTree = dataset => {\r\n\tif (dataset.length > 0) {\r\n\t\tlet hashTable = {};\r\n\t\tlet lowestManager = dataset[0].manager;\r\n\r\n\t\tdataset.forEach(aData => {\r\n\t\t\tif (lowestManager > aData.manager) lowestManager = aData.manager;\r\n\t\t\thashTable[aData.id] = setEmployeeObjectForLibrary(aData);\r\n\t\t});\r\n\t\tlet dataTree = [];\r\n\t\tdataset.forEach(data => {\r\n\t\t\tif (hashTable.hasOwnProperty(data.manager)) {\r\n\t\t\t\thashTable[data.manager].children.push(hashTable[data.id]);\r\n\t\t\t} else if (data.manager === lowestManager || data.id === lowestManager) {\r\n\t\t\t\tdataTree.push(hashTable[data.id]);\r\n\t\t\t} else {\r\n\t\t\t}\r\n\t\t});\r\n\t\tappendReports(dataTree[0]);\r\n\t\treturn dataTree;\r\n\t} else {\r\n\t\treturn dataset;\r\n\t}\r\n};\r\n\r\nexport const baseUrl = new URL(\r\n\t\"https://2jdg5klzl0.execute-api.us-west-1.amazonaws.com/default/EmployeesChart-Api\"\r\n);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { PanelContext } from \"../../contexts/SettingsProvider\";\r\nimport { AppContext } from \"../../contexts/AppProvider\";\r\nimport { baseUrl } from \"../../Utils\";\r\n\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { isEqual } from \"lodash\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: \"30%\",\r\n\t\tposition: \"absolute\"\r\n\t},\r\n\theading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tflexBasis: \"33.33%\",\r\n\t\tflexShrink: 0\r\n\t},\r\n\tsecondaryHeading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tcolor: theme.palette.text.secondary\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 200,\r\n\t\tdisplay: \"block\",\r\n\t\toverflow: \"visible\"\r\n\t},\r\n\tcontainer: {\r\n\t\tdisplay: \"block\"\r\n\t},\r\n\tbutton: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: \"#f1ad36\",\r\n\t\tcolor: \"white\"\r\n\t},\r\n\tinput: {\r\n\t\tdisplay: \"none\"\r\n\t}\r\n}));\r\n\r\nexport default function ManagerSettings() {\r\n\tconst classes = useStyles();\r\n\tconst [expanded, updatePanelState] = useContext(PanelContext);\r\n\tconst { state, setState } = useContext(AppContext);\r\n\tconst [values, setValues] = useState({\r\n\t\tmanagerId: state.managerId\r\n\t});\r\n\tconst [previousValues, setPreviousValues] = useState({\r\n\t\tmanagerId: null\r\n\t});\r\n\tconst [disabled, setDisabled] = useState(false);\r\n\tconst [buttonTitle] = useState(\"Find Manager\");\r\n\r\n\tconst handleChange = panel => (event, expanded) => {\r\n\t\tupdatePanelState(expanded ? panel : false);\r\n\t};\r\n\r\n\tconst handleValueChange = name => event => {\r\n\t\tconst value = event.target.value.replace(/^0+/, \"\");\r\n\t\tconst newvalue = Math.abs(value);\r\n\t\tsetValues({ ...values, [name]: newvalue });\r\n\t};\r\n\r\n\tconst handleClick = e => {\r\n\t\tsetDisabled(true);\r\n\t\tconst { managerId } = values;\r\n\t\tsetPreviousValues({ managerId });\r\n\t\tconst url = `${baseUrl}?manager=${managerId}`;\r\n\t\tsetState({ url, goFetch: true });\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isEqual(values, previousValues)) {\r\n\t\t\tsetDisabled(false);\r\n\t\t} else {\r\n\t\t\tsetDisabled(true);\r\n\t\t}\r\n\t}, [values, previousValues]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (expanded !== \"panel2\") {\r\n\t\t\tsetDisabled(false);\r\n\t\t\tsetPreviousValues({ managerId: null });\r\n\t\t}\r\n\t}, [expanded]);\r\n\r\n\treturn (\r\n\t\t<ExpansionPanel\r\n\t\t\texpanded={expanded === \"panel2\"}\r\n\t\t\tonChange={handleChange(\"panel2\")}\r\n\t\t>\r\n\t\t\t<ExpansionPanelSummary\r\n\t\t\t\texpandIcon={<ExpandMoreIcon />}\r\n\t\t\t\taria-controls=\"panel2bh-content\"\r\n\t\t\t\tid=\"panel2bh-header\"\r\n\t\t\t>\r\n\t\t\t\t<Typography className={classes.heading}>Managers</Typography>\r\n\t\t\t\t<Typography className={classes.secondaryHeading}>\r\n\t\t\t\t\tSearch for a specific manager\r\n\t\t\t\t</Typography>\r\n\t\t\t</ExpansionPanelSummary>\r\n\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t<form className={classes.container} noValidate autoComplete=\"off\">\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"standard-name\"\r\n\t\t\t\t\t\tlabel=\"Manager Id\"\r\n\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\tvalue={parseInt(values.managerId)}\r\n\t\t\t\t\t\tonChange={handleValueChange(\"managerId\")}\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{buttonTitle}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t</ExpansionPanelDetails>\r\n\t\t</ExpansionPanel>\r\n\t);\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { PanelContext } from \"../../contexts/SettingsProvider\";\r\nimport { AppContext } from \"../../contexts/AppProvider\";\r\nimport { baseUrl } from \"../../Utils\";\r\n\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { isEqual } from \"lodash\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: \"30%\",\r\n\t\tposition: \"absolute\"\r\n\t},\r\n\theading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tflexBasis: \"33.33%\",\r\n\t\tflexShrink: 0\r\n\t},\r\n\tsecondaryHeading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tcolor: theme.palette.text.secondary\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 200,\r\n\t\tdisplay: \"block\",\r\n\t\toverflow: \"visible\"\r\n\t},\r\n\tcontainer: {\r\n\t\tdisplay: \"block\"\r\n\t},\r\n\tbutton: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: \"#48b53f\",\r\n\t\tcolor: \"white\"\r\n\t},\r\n\tinput: {\r\n\t\tdisplay: \"none\"\r\n\t}\r\n}));\r\n\r\nexport default function EmployeeSettings() {\r\n\tconst classes = useStyles();\r\n\tconst [expanded, updatePanelState] = useContext(PanelContext);\r\n\tconst { state, setState } = useContext(AppContext);\r\n\tconst [values, setValues] = useState({\r\n\t\temployeeId: state.employeeId\r\n\t});\r\n\tconst [previousValues, setPreviousValues] = useState({\r\n\t\temployeeId: null\r\n\t});\r\n\tconst [disabled, setDisabled] = useState(false);\r\n\tconst [buttonTitle] = useState(\"Find Employee\");\r\n\r\n\tconst handleChange = panel => (event, expanded) => {\r\n\t\tupdatePanelState(expanded ? panel : false);\r\n\t};\r\n\r\n\tconst handleValueChange = name => event => {\r\n\t\tconst value = event.target.value.replace(/^0+/, \"\");\r\n\t\tconst newvalue = Math.abs(value);\r\n\r\n\t\tsetValues({ ...values, [name]: newvalue });\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetDisabled(true);\r\n\t\tconst { employeeId } = values;\r\n\t\tsetPreviousValues({ employeeId });\r\n\t\tconst url = `${baseUrl}?id=${employeeId}`;\r\n\t\tsetState({ url, goFetch: true });\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isEqual(values, previousValues)) {\r\n\t\t\tsetDisabled(false);\r\n\t\t} else {\r\n\t\t\tsetDisabled(true);\r\n\t\t}\r\n\t}, [values, previousValues]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (expanded !== \"panel3\") {\r\n\t\t\tsetDisabled(false);\r\n\t\t\tsetPreviousValues({ employeeId: null });\r\n\t\t}\r\n\t}, [expanded]);\r\n\r\n\treturn (\r\n\t\t<ExpansionPanel\r\n\t\t\texpanded={expanded === \"panel3\"}\r\n\t\t\tonChange={handleChange(\"panel3\")}\r\n\t\t>\r\n\t\t\t<ExpansionPanelSummary\r\n\t\t\t\texpandIcon={<ExpandMoreIcon />}\r\n\t\t\t\taria-controls=\"panel3bh-content\"\r\n\t\t\t\tid=\"panel3bh-header\"\r\n\t\t\t>\r\n\t\t\t\t<Typography className={classes.heading}>Employees</Typography>\r\n\t\t\t\t<Typography className={classes.secondaryHeading}>\r\n\t\t\t\t\tSearch for an individual employee\r\n\t\t\t\t</Typography>\r\n\t\t\t</ExpansionPanelSummary>\r\n\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t<form className={classes.container} autoComplete=\"off\">\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tid=\"standard-name\"\r\n\t\t\t\t\t\tlabel=\"Employee ID\"\r\n\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\tvalue={parseInt(values.employeeId)}\r\n\t\t\t\t\t\tonChange={handleValueChange(\"employeeId\")}\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{buttonTitle}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t</ExpansionPanelDetails>\r\n\t\t</ExpansionPanel>\r\n\t);\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\n\r\n// material UI\r\nimport ChartSettings from \"./setting-panels/ChartSettings\";\r\nimport ManagerSettings from \"./setting-panels/ManagerSettings\";\r\nimport EmployeeSettings from \"./setting-panels/EmployeeSettings\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\n// custom styles\r\nimport \"./styles/App.css\";\r\n\r\n// contexts\r\nimport { AppContext } from \"../contexts/AppProvider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: \"600px\",\r\n\t\tposition: \"absolute\",\r\n\t\tboxShadow: \"-1px 2px 5px 0px rgba(0, 0, 0, 0.3)\"\r\n\t},\r\n\tmodal: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tposition: \"absolute\",\r\n\t\tbackgroundColor: \"#307cff\",\r\n\t\tcolor: \"white\",\r\n\t\tzIndex: 2,\r\n\t\tborderRadius: \"4px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tflexDirection: \"column\",\r\n\t\ttextAlign: \"center\"\r\n\t},\r\n\tcloseIcon: {\r\n\t\tposition: \"relative\",\r\n\t\tbottom: \"-19px\",\r\n\t\tright: \"-162px\"\r\n\t},\r\n\thidden: {\r\n\t\tdisplay: \"none\"\r\n\t},\r\n\tsearching: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tposition: \"absolute\",\r\n\t\tbackgroundColor: \"rgba(92, 241, 196, 0.83)\",\r\n\t\tcolor: \"black\",\r\n\t\tzIndex: 2,\r\n\t\tborderRadius: \"4px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\ttextAlign: \"center\"\r\n\t},\r\n\tmotion: {\r\n\t\tmarginLeft: \"5px\",\r\n\t\tanimation: \"rotation 2s infinite linear\"\r\n\t},\r\n\terror: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tposition: \"absolute\",\r\n\t\tbackgroundColor: \"#ff0000a1\",\r\n\t\tcolor: \"white\",\r\n\t\tzIndex: 2,\r\n\t\tborderRadius: \"4px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tflexDirection: \"column\",\r\n\t\ttextAlign: \"center\"\r\n\t},\r\n\tnoMatch: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tposition: \"absolute\",\r\n\t\tbackgroundColor: \"#a236a5a1\",\r\n\t\tcolor: \"white\",\r\n\t\tzIndex: 2,\r\n\t\tborderRadius: \"4px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tflexDirection: \"column\",\r\n\t\ttextAlign: \"center\"\r\n\t}\r\n}));\r\n\r\nexport default function Settings() {\r\n\tconst classes = useStyles();\r\n\tconst [visible, setVisible] = useState(true);\r\n\tconst [errorVisible, setErrorVisible] = useState(true);\r\n\tconst [noMatchVisible, setnoMatchVisible] = useState(true);\r\n\r\n\tconst { state, setState } = useContext(AppContext);\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetVisible(false);\r\n\t};\r\n\tconst handleErrorClick = () => {\r\n\t\tsetState({ error: false });\r\n\t\tsetErrorVisible(true);\r\n\t};\r\n\tconst handleNoMatchClick = () => {\r\n\t\tsetState({ noMatch: false });\r\n\t\tsetnoMatchVisible(true);\r\n\t};\r\n\r\n\tconsole.log(\"error :\", state.error);\r\n\tconsole.log(\"noMatch :\", state.noMatch);\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Fade in={visible}>\r\n\t\t\t\t<div className={classes.modal}>\r\n\t\t\t\t\t<Typography variant=\"h5\">Organizational Chart Generator</Typography>\r\n\t\t\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\r\n\t\t\t\t\t\tThis tool allows you to generate an organizational chart based on a\r\n\t\t\t\t\t\tlist of employees.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStart\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Fade>\r\n\t\t\t{state.error && (\r\n\t\t\t\t<Fade in={errorVisible}>\r\n\t\t\t\t\t<div className={classes.error}>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">Error</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\r\n\t\t\t\t\t\t\tThe data couldn't be retrieved.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\tonClick={handleErrorClick}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fade>\r\n\t\t\t)}\r\n\t\t\t{state.noMatch && (\r\n\t\t\t\t<Fade in={noMatchVisible}>\r\n\t\t\t\t\t<div className={classes.noMatch}>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">No results</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\r\n\t\t\t\t\t\t\tThere are no matches in our records.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\tonClick={handleNoMatchClick}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fade>\r\n\t\t\t)}\r\n\t\t\t<div>\r\n\t\t\t\t<ChartSettings />\r\n\t\t\t\t<ManagerSettings />\r\n\t\t\t\t<EmployeeSettings />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { AppContext } from \"../contexts/AppProvider\";\r\nimport { createDataTree } from \"../Utils\";\r\nimport \"./styles/App.css\";\r\n\r\nconst OrgChart = require(\"@latticehr/react-org-chart\");\r\n\r\nexport default function Chart() {\r\n\tconst { state, setState } = useContext(AppContext);\r\n\tconst { data, url, dataReady, goFetch } = state;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url);\r\n\t\t\t\tresponse.json().then(employeeList => {\r\n\t\t\t\t\tif (employeeList.length > 0) {\r\n\t\t\t\t\t\tconst data = createDataTree(employeeList)[0];\r\n\t\t\t\t\t\tsetState({ data, dataReady: true });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetState({ noMatch: true });\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetState({ error: true, errorMessage: err });\r\n\t\t\t}\r\n\t\t};\r\n\t\tif (goFetch) {\r\n\t\t\tfetchData();\r\n\t\t}\r\n\t}, [goFetch, setState, url]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{dataReady && (\r\n\t\t\t\t<OrgChart\r\n\t\t\t\t\tborderColor=\"black\"\r\n\t\t\t\t\treportsColor=\"black\"\r\n\t\t\t\t\ttitleColor=\"gray\"\r\n\t\t\t\t\tclassName=\"orgchart\"\r\n\t\t\t\t\ttree={data}\r\n\t\t\t\t\tshouldResize={false}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n// import Main from \"./Main\";\r\nimport Main from \"./components/Main\";\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n","import React from \"react\";\r\nimport Settings from \"./Settings\";\r\nimport Chart from \"./Chart\";\r\nimport \"./styles/Main.css\";\r\n\r\nimport AppProvider from \"../contexts/AppProvider\";\r\nimport SettingsProvider from \"../contexts/SettingsProvider\";\r\n\r\nexport default function Main() {\r\n\treturn (\r\n\t\t<div className=\"main-view\">\r\n\t\t\t<AppProvider>\r\n\t\t\t\t<SettingsProvider>\r\n\t\t\t\t\t<Settings />\r\n\t\t\t\t\t<Chart />\r\n\t\t\t\t</SettingsProvider>\r\n\t\t\t</AppProvider>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"sourceRoot":""}