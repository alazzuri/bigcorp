{"version":3,"sources":["components/InputSettings.js","consts.js","components/NodeLabel.js","components/App.js","Utils.js","Main.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","display","flexDirection","group","margin","InputSettings","classes","React","useState","name","values","setValues","handleChange","event","target","value","className","Paper","elevation","square","Typography","variant","component","container","noValidate","autoComplete","TextField","disabled","id","label","textField","onChange","type","Button","size","color","button","employeeCard","backgroundColor","justifyContent","borderRadius","boxShadow","nodeSize","x","y","buttonProps","treeStyle","width","height","foreignObject","NodeLabel","this","props","nodeData","style","attributes","department","office","_children","_collapsed","PureComponent","App","state","employeesList","dataReady","data","fetch","then","res","json","unorderedTreeIDs","map","person","manager","dataTree","siblingGroup","parentIndex","length","directChildrenIndex","children","createDataTree","uniqueGenerations","employee","siblingGroups","generation","siblings","push","first","last","currentGroup","sibling","parseInt","previous","child","splice","getSiblingGroups","sort","a","b","reduce","unique","item","includes","setState","axis","translate","window","innerWidth","innerHeight","orientation","pathFunc","allowForeignObjects","nodeLabelComponent","render","foreignObjectWrapper","Component","Main","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8f0aed2b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tpadding: theme.spacing(3),\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\"\r\n\t},\r\n\tgroup: {\r\n\t\tmargin: theme.spacing(0, 0)\r\n\t}\r\n}));\r\n\r\nexport default function InputSettings() {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [values, setValues] = React.useState({\r\n\t\tname: \"name\"\r\n\t});\r\n\r\n\tconst handleChange = name => event => {\r\n\t\tsetValues({ ...values, [name]: event.target.value });\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"InputSettings\">\r\n\t\t\t<Paper elevation=\"2\" square className={classes.root}>\r\n\t\t\t\t<Typography variant=\"h5\" component=\"h3\">\r\n\t\t\t\t\tOrganizational Chart Generator\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography component=\"p\">\r\n\t\t\t\t\tThis tool allows to generate an organizational chart.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography component=\"p\">\r\n\t\t\t\t\tTo generate the complete chart, leave all the following inputs or\r\n\t\t\t\t\tempty, or feel free to play around with them to get a sectional chart.\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t<form className={classes.container} noValidate autoComplete=\"off\">\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\t\t\tlabel=\"Manager ID\"\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\tonChange={handleChange(\"name\")}\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\t\t\tlabel=\"Employee ID\"\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\tonChange={handleChange(\"name\")}\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\t\t\tlabel=\"Offset\"\r\n\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\tonChange={handleChange(\"name\")}\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGENERATE CHART\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n}\r\n","export const employeeCard = {\r\n\tdisplay: \"flex\",\r\n\tbackgroundColor: \"#31f7d9\",\r\n\tjustifyContent: \"space-evenly\",\r\n\tpadding: \"10px\",\r\n\tborderRadius: \"15px\",\r\n\tboxShadow: \"2px 3px 4px 2px rgba(232,232,232,1)\"\r\n};\r\n\r\nexport const nodeSize = {\r\n\tx: 250,\r\n\ty: 200\r\n};\r\n\r\nexport const buttonProps = {\r\n\tsize: \"1.5em\"\r\n};\r\n\r\nexport const treeStyle = { width: \"100vw\", height: \"95vh\" };\r\n\r\nexport const foreignObject = {\r\n\ty: -50,\r\n\tx: -100,\r\n\tnodeSize: {\r\n\t\tx: 200\r\n\t}\r\n};\r\n","import React from \"react\";\r\n\r\nimport { employeeCard, buttonProps } from \"../consts\";\r\n\r\nimport { GoDiffAdded, GoDiffRemoved } from \"react-icons/go\";\r\n\r\nexport default class NodeLabel extends React.PureComponent {\r\n\trender() {\r\n\t\tconst { className, nodeData } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div style={employeeCard} className={className}>\r\n\t\t\t\t<div className=\"employee-info\">\r\n\t\t\t\t\t<div className=\"employee-title\">{nodeData.name}</div>\r\n\t\t\t\t\t<div>Department: {nodeData.attributes.department}</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tOffice:{\" \"}\r\n\t\t\t\t\t\t{nodeData.attributes.office\r\n\t\t\t\t\t\t\t? nodeData.attributes.office\r\n\t\t\t\t\t\t\t: \"Info not available\"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"employee-children-icon\">\r\n\t\t\t\t\t{nodeData._children && (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{nodeData._collapsed ? (\r\n\t\t\t\t\t\t\t\t<GoDiffAdded color=\"#009cfb\" {...buttonProps} />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<GoDiffRemoved color=\"orangered\" {...buttonProps} />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport InputSettings from \"./InputSettings\";\r\nimport NodeLabel from \"./NodeLabel\";\r\nimport Tree from \"react-d3-tree\";\r\n\r\nimport { nodeSize, treeStyle, foreignObject } from \"../consts\";\r\nimport {\r\n\tgetIds,\r\n\tfindMiddlePosition,\r\n\tgetUniqueGenerations,\r\n\tgetSiblingGroups,\r\n\tcreateDataTree\r\n} from \"../Utils\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temployeesList: [],\r\n\t\t\tdataReady: false,\r\n\t\t\tdata: null\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\r\n\t\t\t\"https://2jdg5klzl0.execute-api.us-west-1.amazonaws.com/default/EmployeesChart-Api\"\r\n\t\t)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(employeesList => {\r\n\t\t\t\t// GET MANAGER ID'S\r\n\t\t\t\tconst unorderedTreeIDs = getIds(employeesList);\r\n\r\n\t\t\t\t// REMOVE DUPLICATES MANAGER ID'S AND, SORT THEM, REVERSE THEM\r\n\t\t\t\tconst uniqueGenerations = getUniqueGenerations(unorderedTreeIDs);\r\n\r\n\t\t\t\t// CREATE GROUPS OF SIBLINGS - SIBLINGS SHARE SAME MANAGER ID\r\n\t\t\t\tconst siblingGroups = getSiblingGroups(\r\n\t\t\t\t\temployeesList,\r\n\t\t\t\t\tuniqueGenerations\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// CREATE DATA TREE TO FEED THE CHART\r\n\t\t\t\tconst dataTree = createDataTree(siblingGroups);\r\n\r\n\t\t\t\t// SET THE STATE :)\r\n\t\t\t\tthis.setState({ data: dataTree, dataReady: true });\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\t// PULL NECESSARY STATE\r\n\t\tconst { data, dataReady } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"App\"} id=\"treeWrapper\" style={treeStyle}>\r\n\t\t\t\t<InputSettings className=\"InputSetting\" />\r\n\t\t\t\t<div className=\"Tree\">\r\n\t\t\t\t\t{dataReady && (\r\n\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\ttranslate={{ x: findMiddlePosition(\"x\"), y: 80 }}\r\n\t\t\t\t\t\t\torientation=\"vertical\"\r\n\t\t\t\t\t\t\tpathFunc=\"straight\"\r\n\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\tnodeSize={nodeSize}\r\n\t\t\t\t\t\t\tallowForeignObjects\r\n\t\t\t\t\t\t\tnodeLabelComponent={{\r\n\t\t\t\t\t\t\t\trender: <NodeLabel className=\"myLabelComponentInSvg\" />,\r\n\t\t\t\t\t\t\t\tforeignObjectWrapper: foreignObject\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","export const getIds = tree => {\r\n\treturn tree.map(person => person.manager);\r\n};\r\n\r\nexport const setEmployeeObject = employee => {\r\n\treturn {\r\n\t\tname: employee.first + \" \" + employee.last,\r\n\t\tattributes: {\r\n\t\t\tdepartment: employee.department,\r\n\t\t\toffice: employee.office\r\n\t\t},\r\n\t\tchildren: []\r\n\t};\r\n};\r\n\r\nexport const findMiddlePosition = axis => {\r\n\tif (axis === \"x\") {\r\n\t\treturn window.innerWidth / 3;\r\n\t} else {\r\n\t\treturn window.innerHeight / 2;\r\n\t}\r\n};\r\n\r\nexport const getUniqueGenerations = generations => {\r\n\treturn generations\r\n\t\t.sort((a, b) => b - a)\r\n\t\t.reduce((unique, item) => {\r\n\t\t\treturn unique.includes(item) ? unique : [...unique, item];\r\n\t\t}, []);\r\n};\r\n\r\nexport const getSiblingGroups = (employeesList, uniqueGenerations) => {\r\n\tconst siblingGroups = [];\r\n\tfor (let generation in uniqueGenerations) {\r\n\t\tconst siblings = [];\r\n\t\tfor (let person in employeesList) {\r\n\t\t\tif (uniqueGenerations[generation] === employeesList[person].manager) {\r\n\t\t\t\tsiblings.push(setEmployeeObject(employeesList[person]));\r\n\t\t\t}\r\n\t\t}\r\n\t\tsiblingGroups.push(siblings);\r\n\t}\r\n\tfor (let group in siblingGroups) {\r\n\t\tconst currentGroup = siblingGroups[group];\r\n\r\n\t\t// checks everygroup, another loop will be necesarry\r\n\t\tif (currentGroup.length > 0) {\r\n\t\t\tfor (let sibling in currentGroup) {\r\n\t\t\t\t// I COULD DO JUST A FOR LOOP\r\n\t\t\t\tif (parseInt(group) < siblingGroups.length) {\r\n\t\t\t\t\tconst previous = siblingGroups[parseInt(group) + 1];\r\n\r\n\t\t\t\t\tfor (let child in previous) {\r\n\t\t\t\t\t\tif (currentGroup.length > 0) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tprevious[child].attributes.department ===\r\n\t\t\t\t\t\t\t\tcurrentGroup[sibling].attributes.department\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tprevious[child].children.push(currentGroup[sibling]);\r\n\t\t\t\t\t\t\t\tcurrentGroup.splice(sibling, 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn siblingGroups;\r\n};\r\n\r\nexport const createDataTree = siblingGroup => {\r\n\tconst parentIndex = siblingGroup.length - 1;\r\n\tconst directChildrenIndex = siblingGroup.length - 2;\r\n\tconst root = siblingGroup[parentIndex];\r\n\troot[0].children = siblingGroup[directChildrenIndex];\r\n\treturn root;\r\n};\r\n","import React, { Component, useState, createContext } from \"react\";\r\nimport App from \"./components/App\";\r\n\r\nexport default class Main extends Component {\r\n\trender() {\r\n\t\treturn <App />;\r\n\t}\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./Main\";\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}