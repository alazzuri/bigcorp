{"version":3,"sources":["contexts/SettingsProvider.js","contexts/AppProvider.js","components/setting-panels/ChartSettings.js","components/setting-panels/ManagerSettings.js","components/setting-panels/EmployeeSettings.js","components/Settings.js","Utils.js","components/Chart.js","index.js","components/Main.js"],"names":["PanelContext","React","createContext","SettingsProvider","props","expanded","useState","Provider","value","children","AppContext","AppProvider","gofetch","limit","offset","managerId","employeeId","fullSearch","managerSearch","employeeSearch","state","setState","useStyles","makeStyles","theme","root","width","position","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","textField","marginLeft","spacing","marginRight","button","margin","display","input","ChartSettings","panel","classes","useContext","updatePanelState","values","setValues","handleValueChange","name","event","target","replace","newvalue","Math","abs","ExpansionPanel","onChange","ExpansionPanelSummary","expandIcon","aria-controls","id","Typography","className","ExpansionPanelDetails","container","autoComplete","TextField","type","label","parseInt","Button","variant","onClick","ManagerSettings","noValidate","EmployeeSettings","boxShadow","modal","height","backgroundColor","zIndex","borderRadius","justifyContent","alignItems","flexDirection","textAlign","closeIcon","bottom","right","hidden","Settings","visible","setVisible","gutterBottom","avatars","setUserTitle","employee","department","office","createDataTree","dataset","length","hashTable","lowestManager","manager","forEach","aData","person","first","last","title","avatar","floor","random","totalReports","dataTree","data","hasOwnProperty","push","appendReports","child","OrgChart","require","Chart","dataReady","setDataReady","setData","fetchData","url","a","fetch","json","then","employeeList","useEffect","baseUrl","URL","params","Object","keys","key","searchParams","append","borderColor","reportsColor","titleColor","tree","shouldResize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab60f026.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const PanelContext = React.createContext();\r\n\r\nexport default function SettingsProvider(props) {\r\n\tconst expanded = useState(false);\r\n\treturn (\r\n\t\t<PanelContext.Provider value={expanded}>\r\n\t\t\t{props.children}\r\n\t\t</PanelContext.Provider>\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport const AppContext = React.createContext({});\r\n\r\nexport default function AppProvider({ children }) {\r\n\tconst [state, setState] = useState({\r\n\t\tgofetch: false,\r\n\t\tlimit: 5,\r\n\t\toffset: 0,\r\n\t\tmanagerId: 0,\r\n\t\temployeeId: 1,\r\n\t\tfullSearch: false,\r\n\t\tmanagerSearch: false,\r\n\t\temployeeSearch: false\r\n\t});\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider value={{ state, setState }}>\r\n\t\t\t{children}\r\n\t\t</AppContext.Provider>\r\n\t);\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { PanelContext } from \"../../contexts/SettingsProvider\";\r\nimport { AppContext } from \"../../contexts/AppProvider\";\r\n\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: \"30%\",\r\n\t\tposition: \"absolute\"\r\n\t},\r\n\theading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tflexBasis: \"33.33%\",\r\n\t\tflexShrink: 0\r\n\t},\r\n\tsecondaryHeading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tcolor: theme.palette.text.secondary\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 200\r\n\t},\r\n\tbutton: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tdisplay: \"block\"\r\n\t},\r\n\tinput: {\r\n\t\tdisplay: \"none\"\r\n\t}\r\n}));\r\n\r\nexport default function ChartSettings() {\r\n\tconst classes = useStyles();\r\n\tconst [expanded, updatePanelState] = useContext(PanelContext);\r\n\tconst { state, setState } = useContext(AppContext);\r\n\tconst [values, setValues] = useState({\r\n\t\tlimit: state.limit,\r\n\t\toffset: state.offset\r\n\t});\r\n\r\n\tconst handleChange = panel => (event, expanded) => {\r\n\t\tupdatePanelState(expanded ? panel : false);\r\n\t};\r\n\r\n\tconst handleValueChange = name => event => {\r\n\t\tconst value = event.target.value.replace(/^0+/, \"\");\r\n\t\tconst newvalue = Math.abs(value);\r\n\t\tsetValues({ ...values, [name]: newvalue });\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\tconst { limit, offset } = values;\r\n\t\tsetState({ limit, offset, fullSearch: true });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ExpansionPanel\r\n\t\t\texpanded={expanded === \"panel1\"}\r\n\t\t\tonChange={handleChange(\"panel1\")}\r\n\t\t>\r\n\t\t\t<ExpansionPanelSummary\r\n\t\t\t\texpandIcon={<ExpandMoreIcon />}\r\n\t\t\t\taria-controls=\"panel1bh-content\"\r\n\t\t\t\tid=\"panel1bh-header\"\r\n\t\t\t>\r\n\t\t\t\t<Typography className={classes.heading}>\r\n\t\t\t\t\tOrganizational Chart\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography className={classes.secondaryHeading}>\r\n\t\t\t\t\tGenerate the full tree, or a subset\r\n\t\t\t\t</Typography>\r\n\t\t\t</ExpansionPanelSummary>\r\n\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t<form className={classes.container} autoComplete=\"off\">\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tid=\"standard-name\"\r\n\t\t\t\t\t\tlabel=\"Limit of employees\"\r\n\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\tvalue={parseInt(values.limit)}\r\n\t\t\t\t\t\tonChange={handleValueChange(\"limit\")}\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tid=\"standard-name\"\r\n\t\t\t\t\t\tlabel=\"Set an Offset\"\r\n\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\tvalue={parseInt(values.offset)}\r\n\t\t\t\t\t\tonChange={handleValueChange(\"offset\")}\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGenerate Chart\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t</ExpansionPanelDetails>\r\n\t\t</ExpansionPanel>\r\n\t);\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { PanelContext } from \"../../contexts/SettingsProvider\";\r\nimport { AppContext } from \"../../contexts/AppProvider\";\r\n\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: \"30%\",\r\n\t\tposition: \"absolute\"\r\n\t},\r\n\theading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tflexBasis: \"33.33%\",\r\n\t\tflexShrink: 0\r\n\t},\r\n\tsecondaryHeading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tcolor: theme.palette.text.secondary\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 200,\r\n\t\tdisplay: \"block\"\r\n\t},\r\n\tcontainer: {\r\n\t\tdisplay: \"block\"\r\n\t},\r\n\tbutton: {\r\n\t\tmargin: theme.spacing(1)\r\n\t},\r\n\tinput: {\r\n\t\tdisplay: \"none\"\r\n\t}\r\n}));\r\n\r\nexport default function ManagerSettings() {\r\n\tconst classes = useStyles();\r\n\tconst [expanded, updatePanelState] = useContext(PanelContext);\r\n\tconst { state, setState } = useContext(AppContext);\r\n\r\n\tconst [values, setValues] = useState({\r\n\t\tmanagerId: state.managerId\r\n\t});\r\n\r\n\tconst handleChange = panel => (event, expanded) => {\r\n\t\tupdatePanelState(expanded ? panel : false);\r\n\t};\r\n\r\n\tconst handleValueChange = name => event => {\r\n\t\tconst value = event.target.value.replace(/^0+/, \"\");\r\n\t\tconst newvalue = Math.abs(value);\r\n\t\tsetValues({ ...values, [name]: newvalue });\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\tconst { managerId } = values;\r\n\t\tsetState({ managerId, managerSearch: true });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ExpansionPanel\r\n\t\t\texpanded={expanded === \"panel2\"}\r\n\t\t\tonChange={handleChange(\"panel2\")}\r\n\t\t>\r\n\t\t\t<ExpansionPanelSummary\r\n\t\t\t\texpandIcon={<ExpandMoreIcon />}\r\n\t\t\t\taria-controls=\"panel2bh-content\"\r\n\t\t\t\tid=\"panel2bh-header\"\r\n\t\t\t>\r\n\t\t\t\t<Typography className={classes.heading}>Managers</Typography>\r\n\t\t\t\t<Typography className={classes.secondaryHeading}>\r\n\t\t\t\t\tSearch for a specific manager\r\n\t\t\t\t</Typography>\r\n\t\t\t</ExpansionPanelSummary>\r\n\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t<form className={classes.container} noValidate autoComplete=\"off\">\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"standard-name\"\r\n\t\t\t\t\t\tlabel=\"Manager Id\"\r\n\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\tvalue={parseInt(values.managerId)}\r\n\t\t\t\t\t\tonChange={handleValueChange(\"managerId\")}\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSearch Manager\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t</ExpansionPanelDetails>\r\n\t\t</ExpansionPanel>\r\n\t);\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { PanelContext } from \"../../contexts/SettingsProvider\";\r\nimport { AppContext } from \"../../contexts/AppProvider\";\r\n\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: \"30%\",\r\n\t\tposition: \"absolute\"\r\n\t},\r\n\theading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tflexBasis: \"33.33%\",\r\n\t\tflexShrink: 0\r\n\t},\r\n\tsecondaryHeading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tcolor: theme.palette.text.secondary\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 200,\r\n\t\tdisplay: \"block\"\r\n\t},\r\n\tcontainer: {\r\n\t\tdisplay: \"block\"\r\n\t},\r\n\tbutton: {\r\n\t\tmargin: theme.spacing(1)\r\n\t},\r\n\tinput: {\r\n\t\tdisplay: \"none\"\r\n\t}\r\n}));\r\n\r\nexport default function EmployeeSettings() {\r\n\tconst classes = useStyles();\r\n\tconst [expanded, updatePanelState] = useContext(PanelContext);\r\n\tconst { state, setState } = useContext(AppContext);\r\n\tconst [values, setValues] = useState({\r\n\t\temployeeId: state.employeeId\r\n\t});\r\n\r\n\tconst handleChange = panel => (event, expanded) => {\r\n\t\tupdatePanelState(expanded ? panel : false);\r\n\t};\r\n\r\n\tconst handleValueChange = name => event => {\r\n\t\tconst value = event.target.value.replace(/^0+/, \"\");\r\n\t\tconst newvalue = Math.abs(value);\r\n\r\n\t\tsetValues({ ...values, [name]: newvalue });\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\tconst { employeeId } = values;\r\n\t\tsetState({ employeeId, employeeSearch: true });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ExpansionPanel\r\n\t\t\texpanded={expanded === \"panel3\"}\r\n\t\t\tonChange={handleChange(\"panel3\")}\r\n\t\t>\r\n\t\t\t<ExpansionPanelSummary\r\n\t\t\t\texpandIcon={<ExpandMoreIcon />}\r\n\t\t\t\taria-controls=\"panel3bh-content\"\r\n\t\t\t\tid=\"panel3bh-header\"\r\n\t\t\t>\r\n\t\t\t\t<Typography className={classes.heading}>Employees</Typography>\r\n\t\t\t\t<Typography className={classes.secondaryHeading}>\r\n\t\t\t\t\tSearch for an individual employee\r\n\t\t\t\t</Typography>\r\n\t\t\t</ExpansionPanelSummary>\r\n\t\t\t<ExpansionPanelDetails>\r\n\t\t\t\t<form className={classes.container} autoComplete=\"off\">\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tid=\"standard-name\"\r\n\t\t\t\t\t\tlabel=\"Employee ID\"\r\n\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\tvalue={parseInt(values.employeeId)}\r\n\t\t\t\t\t\tonChange={handleValueChange(\"employeeId\")}\r\n\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSearch Employee\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t</ExpansionPanelDetails>\r\n\t\t</ExpansionPanel>\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ChartSettings from \"./setting-panels/ChartSettings\";\r\nimport ManagerSettings from \"./setting-panels/ManagerSettings\";\r\nimport EmployeeSettings from \"./setting-panels/EmployeeSettings\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: \"600px\",\r\n\t\tposition: \"absolute\",\r\n\t\tboxShadow: \"-1px 2px 5px 0px rgba(0, 0, 0, 0.3)\"\r\n\t},\r\n\tmodal: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tposition: \"absolute\",\r\n\t\tbackgroundColor: \"#307cff\",\r\n\t\tcolor: \"white\",\r\n\t\tzIndex: 2,\r\n\t\tborderRadius: \"4px\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tflexDirection: \"column\",\r\n\t\ttextAlign: \"center\"\r\n\t},\r\n\tcloseIcon: {\r\n\t\tposition: \"relative\",\r\n\t\tbottom: \"-19px\",\r\n\t\tright: \"-162px\"\r\n\t},\r\n\thidden: {\r\n\t\tdisplay: \"none\"\r\n\t}\r\n}));\r\n\r\nexport default function Settings() {\r\n\tconst classes = useStyles();\r\n\tconst [visible, setVisible] = useState(true);\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetVisible(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<div className={visible ? classes.modal : classes.hidden}>\r\n\t\t\t\t<Typography variant=\"h5\">Organizational Chart Generator</Typography>\r\n\t\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\r\n\t\t\t\t\tThis tool allows you to generate an organizational chart based on a\r\n\t\t\t\t\tlist of employees.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t>\r\n\t\t\t\t\tStart\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<ChartSettings />\r\n\t\t\t\t<ManagerSettings />\r\n\t\t\t\t<EmployeeSettings />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","const avatars = [\r\n\t\"https://www.w3schools.com/howto/img_avatar.png\",\r\n\t\"https://www.w3schools.com/howto/img_avatar2.png\",\r\n\t\"https://www.w3schools.com/w3images/avatar2.png\",\r\n\t\"https://www.w3schools.com/w3images/avatar6.png\",\r\n\t\"https://www.w3schools.com/w3images/avatar5.png\"\r\n];\r\n\r\nconst randomAvatar = () => Math.floor(Math.random() * (4 - 0)) + 0;\r\n\r\nconst setUserTitle = employee => {\r\n\tconst dept = employee.department ? `Dept. ${employee.department}` : \"\";\r\n\tconst office = employee.office ? `Office ${employee.office}` : \"\";\r\n\tconst title = dept + \" \" + office;\r\n\treturn title;\r\n};\r\n\r\nconst setEmployeeObjectForLibrary = employee => {\r\n\treturn {\r\n\t\tid: employee.id,\r\n\t\tmanager: employee.manager,\r\n\t\tperson: {\r\n\t\t\tname: employee.first + \" \" + employee.last,\r\n\t\t\ttitle: setUserTitle(employee),\r\n\t\t\tavatar: avatars[randomAvatar()],\r\n\t\t\ttotalReports: \"\"\r\n\t\t},\r\n\t\tchildren: []\r\n\t};\r\n};\r\n\r\nconst appendReports = employee => {\r\n\tif (employee.children.length > 0) {\r\n\t\temployee.person.totalReports = `${employee.children.length}`;\r\n\t\temployee.children.forEach(child => {\r\n\t\t\tappendReports(child);\r\n\t\t});\r\n\t}\r\n\treturn employee;\r\n};\r\n\r\nexport const userHasId = (employeeList, id) => {\r\n\temployeeList.forEach(employee => {\r\n\t\tif (employee.manager === id) return;\r\n\t});\r\n\treturn false;\r\n};\r\n\r\nexport const createDataTree = dataset => {\r\n\tif (dataset.length > 0) {\r\n\t\tlet hashTable = {};\r\n\t\tlet lowestManager = dataset[0].manager;\r\n\r\n\t\tdataset.forEach(aData => {\r\n\t\t\tif (lowestManager > aData.manager) lowestManager = aData.manager;\r\n\t\t\thashTable[aData.id] = setEmployeeObjectForLibrary(aData);\r\n\t\t});\r\n\t\tlet dataTree = [];\r\n\t\tdataset.forEach(data => {\r\n\t\t\tif (hashTable.hasOwnProperty(data.manager)) {\r\n\t\t\t\thashTable[data.manager].children.push(hashTable[data.id]);\r\n\t\t\t} else if (data.manager === lowestManager || data.id === lowestManager) {\r\n\t\t\t\tdataTree.push(hashTable[data.id]);\r\n\t\t\t} else {\r\n\t\t\t}\r\n\t\t});\r\n\t\tappendReports(dataTree[0]);\r\n\t\treturn dataTree;\r\n\t} else {\r\n\t\treturn dataset;\r\n\t}\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../contexts/AppProvider\";\r\nimport { createDataTree } from \"../Utils\";\r\n\r\nimport \"./styles/App.css\";\r\nconst OrgChart = require(\"@latticehr/react-org-chart\");\r\n\r\nexport default function Chart() {\r\n\tconst { state, setState } = useContext(AppContext);\r\n\tconst {\r\n\t\tlimit,\r\n\t\toffset,\r\n\t\tmanagerId,\r\n\t\temployeeId,\r\n\t\tmanagerSearch,\r\n\t\temployeeSearch,\r\n\t\tfullSearch\r\n\t} = state;\r\n\r\n\tconst [dataReady, setDataReady] = useState(false);\r\n\tconst [data, setData] = useState(null);\r\n\r\n\tasync function fetchData(url) {\r\n\t\tconst res = await fetch(url);\r\n\t\tres.json().then(employeeList => {\r\n\t\t\tconst dataTree = createDataTree(employeeList)[0];\r\n\t\t\tsetData(dataTree);\r\n\t\t\tsetDataReady(true);\r\n\t\t});\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tvar baseUrl = new URL(\r\n\t\t\t\"https://2jdg5klzl0.execute-api.us-west-1.amazonaws.com/default/EmployeesChart-Api\"\r\n\t\t);\r\n\t\tif (managerSearch) {\r\n\t\t\tconst url = `${baseUrl}?manager=${managerId}`;\r\n\t\t\tfetchData(url);\r\n\t\t\tsetState({ managerSearch: false });\r\n\t\t} else if (employeeSearch) {\r\n\t\t\tconst url = `${baseUrl}?id=${employeeId}`;\r\n\t\t\tfetchData(url);\r\n\t\t\tsetState({ employeeSearch: false });\r\n\t\t} else if (fullSearch) {\r\n\t\t\tconst params = { limit, offset };\r\n\t\t\tObject.keys(params).forEach(key =>\r\n\t\t\t\tbaseUrl.searchParams.append(key, params[key])\r\n\t\t\t);\r\n\t\t\tfetchData(baseUrl);\r\n\t\t\tsetState({ fullSearch: false });\r\n\t\t}\r\n\t\tsetDataReady(false);\r\n\t}, [\r\n\t\temployeeId,\r\n\t\tmanagerId,\r\n\t\toffset,\r\n\t\tlimit,\r\n\t\tfullSearch,\r\n\t\tmanagerSearch,\r\n\t\temployeeSearch,\r\n\t\tsetState\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{dataReady && data && (\r\n\t\t\t\t<OrgChart\r\n\t\t\t\t\tborderColor=\"black\"\r\n\t\t\t\t\treportsColor=\"black\"\r\n\t\t\t\t\ttitleColor=\"gray\"\r\n\t\t\t\t\tclassName=\"orgchart\"\r\n\t\t\t\t\ttree={data}\r\n\t\t\t\t\tshouldResize={false}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n// import Main from \"./Main\";\r\nimport Main from \"./components/Main\";\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n","import React from \"react\";\r\nimport Settings from \"./Settings\";\r\nimport Chart from \"./Chart\";\r\nimport \"./styles/Main.css\";\r\n\r\nimport AppProvider from \"../contexts/AppProvider\";\r\nimport SettingsProvider from \"../contexts/SettingsProvider\";\r\n\r\nexport default function Main() {\r\n\treturn (\r\n\t\t<div className=\"main-view\">\r\n\t\t\t<AppProvider>\r\n\t\t\t\t<SettingsProvider>\r\n\t\t\t\t\t<Settings className=\"settings\" />\r\n\t\t\t\t\t<Chart />\r\n\t\t\t\t</SettingsProvider>\r\n\t\t\t</AppProvider>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"sourceRoot":""}